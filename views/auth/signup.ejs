<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Acess</title>
    <link rel="icon" type="image/png" href="/image/Acess%20logo/logo.png?v=1.0" />
  </head>
  <body>
<!-- stylesheets -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />
    <link href="/css/signup.css" rel="stylesheet" type="text/css" />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/icon?family=Material+Icons"
    />
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
    />

<!-- Navbar -->
<%- include('../../partials/navbar', { page: page }) %>
<!-- for flash messages -->
<div id="alertContainer"></div>
<!-- signup form -->
    <div class="container py-5">
  <!-- Toggle Buttons -->
  <div class="text-center mb-4">
    <div class="btn-group" role="group">
      <button id="accountBtn" class="btn btn-dark">Account Setup</button>
      <button id="billingBtn" class="btn btn-outline-dark" disabled>Billing Address</button>
    </div>
  </div>

  <!-- Forms Container -->
  <div class="row justify-content-center">
    <div class="col-12 col-md-10 col-lg-8">
      <!-- Account Setup Form -->
      <div id="loginForm" class="card shadow mb-4">
        <div class="card-body">
          <h3 class="text-center">
            <img src="../image/Acess logo/logo.png" alt="Logo" width="60" />
          </h3>
          <form id="form1" class="needs-validation" novalidate enctype="multipart/form-data">
            <div class="row g-3">
              <div class="col-md-6">
                <label>First Name</label>
                <input type="text" name="firstname" class="form-control" required />
                <div class="invalid-feedback">Only letters allowed.</div>
              </div>
              <div class="col-md-6">
                <label>Last Name</label>
                <input type="text" name="lastname" class="form-control" required />
                <div class="invalid-feedback">Only letters allowed.</div>
              </div>

              <div class="col-md-6">
                <label>Email</label>
                <input type="email" name="email" class="form-control" required />
                <div class="invalid-feedback">Enter a valid email.</div>
              </div>

              <div class="col-md-6">
                <label>Password</label>
                <input type="password" name="Pass" id="inputPassword4" class="form-control" required />
                <div class="invalid-feedback">
                  8–12 chars, upper, lower, number, special char.
                </div>
              </div>

              <div class="col-12">
                <label>Profile Image</label>
                <input type="file" name="img" class="form-control" required />
                <div class="invalid-feedback">Profile image is required.</div>
              </div>

              <div class="col-12 text-center">
                <button type="submit" id="nextButton" class="btn btn-dark w-100" disabled>Next</button>
              </div>
            </div>
          </form>
        </div>
      </div>

      <!-- Billing Address Form -->
      <div id="signupForm" class="card shadow mb-4 d-none">
        <div class="card-body">
          <h3 class="text-center">
            <img src="../image/Acess logo/logo.png" alt="Logo" width="60" />
          </h3>
          <form id="form2" class="needs-validation" novalidate>
            <div class="row g-3">
              <div class="col-12">
                <label>Address</label>
                <input type="text" name="address" class="form-control" required />
                <div class="invalid-feedback">Min 13 characters.</div>
              </div>
              <div class="col-12">
                <label>Phone Number</label>
                <input type="text" name="phone" class="form-control" required />
                <div class="invalid-feedback">Must be 11 digits.</div>
              </div>
              <div class="col-md-6">
                <label>City</label>
                <input type="text" name="city" class="form-control" required />
                <div class="invalid-feedback">5–15 letters only.</div>
              </div>
              <div class="col-md-4">
                <label>Province</label>
                <select name="province" class="form-select" required>
                  <option value="">Choose...</option>
                  <option>Punjab</option>
                  <option>Sindh</option>
                  <option>Kpk</option>
                  <option>Balochistan</option>
                </select>
                <div class="invalid-feedback">Select one.</div>
              </div>
              <div class="col-md-2">
                <label>ZIP</label>
                <input type="text" name="zip" class="form-control" required />
                <div class="invalid-feedback">Must be 4 digits.</div>
              </div>
              <div class="col-12">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" required />
                  <label class="form-check-label">Agree to terms</label>
                  <div class="invalid-feedback">Required before submitting.</div>
                </div>
              </div>
              <div class="col-12 text-center">
                <button type="submit" class="btn btn-dark w-100">Sign Up</button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>
<!-- Footer Login Redirect -->
<div class="container text-center" style="font-size: 18px; margin-top: 40px;">
  Already have an account?
  <a href="/login" style="text-decoration: none; color: blue;">Login</a>
</div>

  </body>

<!-- scripts -->

<script>
document.addEventListener("DOMContentLoaded", function () {
  const accountBtn = document.getElementById("accountBtn");
  const billingBtn = document.getElementById("billingBtn");
  const form1Wrapper = document.getElementById("loginForm");
  const form2Wrapper = document.getElementById("signupForm");
  const nextButton = document.getElementById("nextButton");
  const form1 = document.getElementById("form1");
  const form2 = document.getElementById("form2");
  const alertContainer = document.getElementById("alertContainer");

  const nameRegex = /^[A-Za-z]+$/;
  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^A-Za-z\d]).{8,12}$/;

  function validateForm1() {
    let valid = true;
    const firstname = form1.firstname;
    const lastname = form1.lastname;
    const password = form1.Pass;
    const email = form1.email;
    const img = form1.img;

    [firstname, lastname, password, email, img].forEach(input => input.classList.remove("is-invalid"));

    if (!nameRegex.test(firstname.value.trim())) {
      firstname.classList.add("is-invalid");
      valid = false;
    }

    if (!nameRegex.test(lastname.value.trim())) {
      lastname.classList.add("is-invalid");
      valid = false;
    }

    if (!passwordRegex.test(password.value.trim())) {
      password.classList.add("is-invalid");
      valid = false;
    }

    if (!email.value.trim() || !email.checkValidity()) {
      email.classList.add("is-invalid");
      valid = false;
    }

    if (!img.files || img.files.length === 0) {
      img.classList.add("is-invalid");
      valid = false;
    }

    return valid;
  }

  function validateForm2() {
    let valid = true;
    const fields = ["address", "phone", "city", "province", "zip"];
    fields.forEach((name) => {
      if (!validateForm2Field(name)) valid = false;
    });
    if (!validateForm2Field("checkbox")) valid = false;
    return valid;
  }

  function validateForm2Field(fieldName) {
    const value = form2[fieldName]?.value?.trim() || "";
    let valid = true;
    let field = form2[fieldName];

    if (fieldName === "address") {
      valid = value.length >= 13;
    } else if (fieldName === "phone") {
      valid = /^\d{11}$/.test(value);
    } else if (fieldName === "city") {
      valid = /^[A-Za-z]{5,15}$/.test(value);
    } else if (fieldName === "zip") {
      valid = /^\d{4}$/.test(value);
    } else if (fieldName === "province") {
      valid = !!value;
    } else if (fieldName === "checkbox") {
      field = form2.querySelector('input[type="checkbox"]');
      valid = field.checked;
    }

    if (valid) {
      field.classList.remove("is-invalid");
    } else {
      field.classList.add("is-invalid");
    }

    return valid;
  }

  function toggleNextButton() {
    const isValid = validateForm1();
    nextButton.disabled = !isValid;
    billingBtn.disabled = !isValid;
  }

  form1.addEventListener("input", toggleNextButton);

  // Setup live validation for form2
  const form2Fields = ["address", "phone", "city", "province", "zip"];
  form2Fields.forEach((fieldName) => {
    const field = form2[fieldName];
    field.addEventListener("input", () => validateForm2Field(fieldName));
    field.addEventListener("blur", () => form2.classList.add("was-validated"));
  });

  const checkbox = form2.querySelector('input[type="checkbox"]');
  checkbox.addEventListener("change", () => validateForm2Field("checkbox"));

  // Next or Billing button click
  function goToForm2(e) {
    e.preventDefault();
    if (validateForm1()) {
      form1.classList.remove("was-validated");
      showForm2();
    } else {
      form1.classList.add("was-validated");
    }
  }

  nextButton.addEventListener("click", goToForm2);
  billingBtn.addEventListener("click", goToForm2);
  form1.addEventListener("submit", goToForm2);
  accountBtn.addEventListener("click", showForm1);

  form2.addEventListener("submit", function (event) {
    event.preventDefault();
    console.log("🚀 form2 submit event triggered");

    if (!validateForm2()) {
      form2.classList.add("was-validated");
      return;
    }

    const formData = new FormData();
    formData.append("firstname", form1.firstname.value);
    formData.append("lastname", form1.lastname.value);
    formData.append("email", form1.email.value);
    formData.append("Pass", form1.Pass.value);
    formData.append("img", form1.img.files[0]);
    formData.append("address", form2.address.value);
    formData.append("phone", form2.phone.value);
    formData.append("city", form2.city.value);
    formData.append("province", form2.province.value);
    formData.append("zip", form2.zip.value);

    fetch("/signup", {
      method: "POST",
      body: formData,
      headers: { "Accept": "application/json" }
    })
      .then(async (response) => {
        let data;
        try {
          data = await response.json();
        } catch (err) {
          const text = await response.text();
          console.error("❌ JSON Parse Error:", err, text);
          alertContainer.innerHTML = `<div class="alert alert-danger">Could not parse server response.</div>`;
          return;
        }

        alertContainer.innerHTML = "";

        if (data.error) {
          alertContainer.innerHTML = `
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
              ${data.error}
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>`;
          alertContainer.scrollIntoView({ behavior: "smooth", block: "center" });
        } else if (data.success) {
          alertContainer.innerHTML = `
            <div class="alert alert-success alert-dismissible fade show" role="alert">
              ${data.success}
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>`;
          setTimeout(() => window.location.href = "/home", 1500);
        } else if (data.redirect) {
          window.location.href = data.redirect;
        } else {
          alertContainer.innerHTML = `<div class="alert alert-warning">Unexpected response.</div>`;
        }
      })
      .catch((err) => {
        console.error("🔥 Fetch error:", err);
        alertContainer.innerHTML = `
          <div class="alert alert-danger alert-dismissible fade show" role="alert">
            Something went wrong. Please try again.
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>`;
      });
  });

  function showForm1() {
    form1Wrapper.classList.remove("d-none");
    form2Wrapper.classList.add("d-none");

    accountBtn.classList.add("btn-dark");
    accountBtn.classList.remove("btn-outline-dark");
    billingBtn.classList.add("btn-outline-dark");
    billingBtn.classList.remove("btn-dark");
  }

  function showForm2() {
    form1Wrapper.classList.add("d-none");
    form2Wrapper.classList.remove("d-none");

    accountBtn.classList.remove("btn-dark");
    accountBtn.classList.add("btn-outline-dark");
    billingBtn.classList.remove("btn-outline-dark");
    billingBtn.classList.add("btn-dark");
  }

  // Init
  toggleNextButton();
});
</script>

<script
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
    crossorigin="anonymous"
  ></script>

</html>