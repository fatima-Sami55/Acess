<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <title>Acess</title>
   <link rel="icon" type="image/png" href="/image/Acess%20logo/logo.png?v=1.0" />
  </head>
  <body>
     <!-- stylesheets -->
    <link
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/icon?family=Material+Icons"
    />
    <link rel="stylesheet" href="../css/safe-checkout.css" />
   
<!-- Progressbar -->
    <div class="row justify-content-center">
      <div class="col-11 col-sm-9 text-center p-0 mt-3 mb-2">
        <div class="px-0 pt-4 pb-0 mt-3 mb-3">
          <div class="container" style="text-align: center">
            <ul id="progressbar">
              <li class="active" id="step1">
                <strong>Addrees and shipment details</strong>
              </li>
              <li id="step2" class="active">
                <strong>Payment details</strong>
              </li>
            </ul>
          </div>
          <form id="form" style="text-align: center">
            <div
              class="container"
              style="display: flex; justify-content: center"
            >
              <div class="progress" style="width: 1000px">
                <div
                  class="progress-bar bg-success"
                  style="width: 100%; border-radius: 20px"
                ></div>
              </div>
            </div>
            <br />
          </form>
        </div>
      </div>
    </div>
<!-- card details form -->
    <div class="container mt-5">
      <form class="checkout-form needs-validation" id="checkout-form" novalidate>
  <div class="text-center mb-4">
    <img src="../image/vectors/credit card.png" alt="Credit Card" style="max-width: 200px" />
  </div>

  <div class="form-group">
    <label for="cardNumber">Card Number</label>
    <input type="text" class="form-control" id="cardNumber" placeholder="Enter card number" required pattern="^\d{16}$" maxlength="16" />
    <div class="invalid-feedback">Card number must be exactly 16 digits.</div>
  </div>

  <div class="form-group">
    <label for="cardName">Cardholder Name</label>
    <input type="text" class="form-control" id="cardName" placeholder="Enter cardholder name" required />
    <div class="invalid-feedback">Cardholder name is required.</div>
  </div>

  <div class="form-row">
    <div class="form-group col-md-6">
      <label for="expiryDate">Expiry Date</label>
      <input type="text" class="form-control" id="expiryDate" placeholder="MM/YY" required pattern="^(0[1-9]|1[0-2])\/\d{2}$" />
      <div class="invalid-feedback">Enter a valid expiry date (MM/YY) at least 1 year from now.</div>
    </div>
    <div class="form-group col-md-6">
      <label for="cvv">CVC</label>
      <input type="text" class="form-control" id="cvv" placeholder="CVC" required pattern="^\d{3}$" maxlength="3" />
      <div class="invalid-feedback">CVC must be exactly 3 digits.</div>
    </div>
  </div>

  <div class="form-group">
    <label for="cardType">Card Type</label>
    <div class="card-type-icons" id="selection">
      <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Visa_Inc._logo.svg/800px-Visa_Inc._logo.svg.png" alt="Visa" data-type="visa" />
      <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Mastercard_2019_logo.svg/1200px-Mastercard_2019_logo.svg.png" alt="MasterCard" data-type="mastercard" />
    </div>
     <input type="hidden" id="cardType" name="cardType" required />
<div class="invalid-feedback d-block" id="cardTypeError" style="display: none;">
  Please select a card type.
</div>
  </div>

  <button type="submit" class="btn btn-primary btn-block mt-3" id="confirm-button">Confirm Payment</button>
</form>

    </div>
<!-- redirection section to shop page -->
    <div class="container" style="margin-top: 50px">
     <div class="alert alert-light text-center mt-4" role="alert">
      Not ready to checkout? <a href="/shop" class="alert-link">Browse more items in the shop</a>.
   </div>
    </div>

</body>

<!-- scripts -->

<script>
  (function () {
    "use strict";

    const form = document.getElementById("checkout-form");
    const cardTypeInput = document.getElementById("cardType");
    const cardTypeError = document.getElementById("cardTypeError");
    const expiryInput = document.getElementById("expiryDate");
    const cardNumberInput = document.getElementById("cardNumber");
    const cardNameInput = document.getElementById("cardName");
    const cvvInput = document.getElementById("cvv");

    // Handle card type icon selection
    document.querySelectorAll(".card-type-icons img").forEach((img) => {
      img.style.cursor = "pointer";

      img.addEventListener("click", () => {
        // Clear all borders + selection
        document.querySelectorAll(".card-type-icons img").forEach((i) => {
          i.classList.remove("selected");
          i.style.border = "none";
        });

        // Apply selection style
        img.classList.add("selected");
        img.style.border = "3px solid #007bff";

        // Set hidden input + hide error
        cardTypeInput.value = img.getAttribute("data-type");
        cardTypeError.style.display = "none";
      });
    });

    form.addEventListener("submit", function (event) {
      event.preventDefault(); // Stop native form submit

      let isValid = true;

      const cardNumber = cardNumberInput.value.trim();
      const cardName = cardNameInput.value.trim();
      const cvv = cvvInput.value.trim();
      const expiry = expiryInput.value.trim();
      const cardType = cardTypeInput.value.trim();

      // Card number: 16 digits
      if (!/^\d{16}$/.test(cardNumber)) {
        cardNumberInput.classList.add("is-invalid");
        isValid = false;
      } else {
        cardNumberInput.classList.remove("is-invalid");
        cardNumberInput.classList.add("is-valid");
      }

      // Cardholder name: required
      if (!cardName) {
        cardNameInput.classList.add("is-invalid");
        isValid = false;
      } else {
        cardNameInput.classList.remove("is-invalid");
        cardNameInput.classList.add("is-valid");
      }

      // CVV: 3 digits
      if (!/^\d{3}$/.test(cvv)) {
        cvvInput.classList.add("is-invalid");
        isValid = false;
      } else {
        cvvInput.classList.remove("is-invalid");
        cvvInput.classList.add("is-valid");
      }

      // Expiry date: MM/YY and 1 year ahead
      let expiryValid = false;
      const match = expiry.match(/^(0[1-9]|1[0-2])\/(\d{2})$/);
      if (match) {
        const inputMonth = parseInt(match[1]);
        const inputYear = parseInt("20" + match[2]);
        const now = new Date();
        const oneYearLater = new Date(now.getFullYear() + 1, now.getMonth());
        const cardDate = new Date(inputYear, inputMonth - 1);
        if (cardDate >= oneYearLater) {
          expiryValid = true;
        }
      }

      if (!expiryValid) {
        expiryInput.classList.add("is-invalid");
        isValid = false;
      } else {
        expiryInput.classList.remove("is-invalid");
        expiryInput.classList.add("is-valid");
      }

      // Card type check
      if (!cardType) {
        cardTypeError.style.display = "block";
        isValid = false;
      } else {
        cardTypeError.style.display = "none";
      }

      // Stop if any validation fails
      if (!isValid) {
        form.classList.add("was-validated");
        return;
      }

      // Get localStorage data
      const quantities = localStorage.getItem("quantities");
      const purchasedDetailsJson = localStorage.getItem("purchasedDetails");
      const purchasedDetails = JSON.parse(purchasedDetailsJson || "{}");

      const formData = {
        cardType: cardType,
        quantities: quantities,
        TotalPrice: purchasedDetails.TotalPrice,
        OrderStatus: purchasedDetails.OrderStatus,
        ShippingAddress: purchasedDetails.ShippingAddress,
        Quantity: purchasedDetails.Quantity,
        PurchaseDate: purchasedDetails.PurchaseDate,
        shipping: purchasedDetails.shipping,
        Discount: purchasedDetails.Discount,
      };

      fetch("/safe-checkout", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
      })
        .then((response) => {
          if (response.ok) return response.json();
          return response.text().then((msg) => {
            throw new Error(msg);
          });
        })
        .then((data) => {
          console.log("Checkout successful!", data);
          window.location.href = "/orders";
        })
        .catch((error) => {
          console.error("Checkout error:", error);
          alert("An error occurred: " + error.message);
        });
    });
  })();
</script>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://kit.fontawesome.com/542d90fccf.js"crossorigin="anonymous"></script>

</html>
